{"ast":null,"code":"var _jsxFileName = \"/Users/gilbertoarellano/Dropbox/Academia/Chapman/Fall 2023/CPSC 370/CPSC-370_BTC_derivates_AI_Chapman/workspaces/portfolio-website/src/components/ThreeAnimation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeAnimation = () => {\n  _s();\n  const mount = React.useRef(null);\n  useEffect(() => {\n    // Create a scene\n    const scene = new THREE.Scene();\n\n    // Create a camera\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Create a renderer\n    const renderer = new THREE.WebGLRenderer();\n    if (mount.current) {\n      renderer.setSize(mount.current.clientWidth, mount.current.clientHeight);\n      mount.current.appendChild(renderer.domElement);\n    }\n\n    // Create a helix geometry\n    const geometry = new THREE.TorusGeometry(0.3, 0.1, 16, 100);\n\n    // Create a material\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n\n    // Create a helix\n    const helix = new THREE.Mesh(geometry, material);\n\n    // Add the helix to the scene\n    scene.add(helix);\n\n    // Animation loop\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      // Rotate the helix\n      helix.rotation.x += 0.001;\n      helix.rotation.y += 0.001;\n\n      // Render the scene with the camera\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mount,\n    id: \"three-animation\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeAnimation, \"VsDVEZQQomRDktK9EJ6nQJmx4cI=\");\n_c = ThreeAnimation;\nexport default ThreeAnimation;\nvar _c;\n$RefreshReg$(_c, \"ThreeAnimation\");","map":{"version":3,"names":["React","useEffect","THREE","jsxDEV","_jsxDEV","ThreeAnimation","_s","mount","useRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","current","setSize","clientWidth","clientHeight","appendChild","domElement","geometry","TorusGeometry","material","MeshBasicMaterial","color","helix","Mesh","add","animate","requestAnimationFrame","rotation","x","y","render","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gilbertoarellano/Dropbox/Academia/Chapman/Fall 2023/CPSC 370/CPSC-370_BTC_derivates_AI_Chapman/workspaces/portfolio-website/src/components/ThreeAnimation.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeAnimation = () => {\n  const mount = React.useRef(null);\n\n  useEffect(() => {\n    // Create a scene\n    const scene = new THREE.Scene();\n\n    // Create a camera\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Create a renderer\n    const renderer = new THREE.WebGLRenderer();\n    if (mount.current) {\n      renderer.setSize(mount.current.clientWidth, mount.current.clientHeight);\n      mount.current.appendChild(renderer.domElement);\n    }\n\n    // Create a helix geometry\n    const geometry = new THREE.TorusGeometry(0.3, 0.1, 16, 100);\n\n    // Create a material\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\n    // Create a helix\n    const helix = new THREE.Mesh(geometry, material);\n\n    // Add the helix to the scene\n    scene.add(helix);\n\n    // Animation loop\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      // Rotate the helix\n      helix.rotation.x += 0.001;\n      helix.rotation.y += 0.001;\n\n      // Render the scene with the camera\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, []);\n\n  return <div ref={mount} id=\"three-animation\"></div>;\n};\n\nexport default ThreeAnimation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAGP,KAAK,CAACQ,MAAM,CAAC,IAAI,CAAC;EAEhCP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;;IAE/B;IACA,MAAMC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjGJ,MAAM,CAACK,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,aAAa,CAAC,CAAC;IAC1C,IAAIZ,KAAK,CAACa,OAAO,EAAE;MACjBF,QAAQ,CAACG,OAAO,CAACd,KAAK,CAACa,OAAO,CAACE,WAAW,EAAEf,KAAK,CAACa,OAAO,CAACG,YAAY,CAAC;MACvEhB,KAAK,CAACa,OAAO,CAACI,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC;IAChD;;IAEA;IACA,MAAMC,QAAQ,GAAG,IAAIxB,KAAK,CAACyB,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;;IAE3D;IACA,MAAMC,QAAQ,GAAG,IAAI1B,KAAK,CAAC2B,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;;IAEjE;IACA,MAAMC,KAAK,GAAG,IAAI7B,KAAK,CAAC8B,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;;IAEhD;IACAnB,KAAK,CAACwB,GAAG,CAACF,KAAK,CAAC;;IAEhB;IACA,MAAMG,OAAO,GAAG,SAAAA,CAAA,EAAY;MAC1BC,qBAAqB,CAACD,OAAO,CAAC;;MAE9B;MACAH,KAAK,CAACK,QAAQ,CAACC,CAAC,IAAI,KAAK;MACzBN,KAAK,CAACK,QAAQ,CAACE,CAAC,IAAI,KAAK;;MAEzB;MACApB,QAAQ,CAACqB,MAAM,CAAC9B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDuB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO9B,OAAA;IAAKoC,GAAG,EAAEjC,KAAM;IAACkC,EAAE,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrD,CAAC;AAACvC,EAAA,CA9CID,cAAc;AAAAyC,EAAA,GAAdzC,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}